{
	"name": "PopulateFact",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Fox_Staging",
						"type": "DatasetReference"
					},
					"name": "StagingSource"
				},
				{
					"dataset": {
						"referenceName": "Fox_Fact_t",
						"type": "DatasetReference"
					},
					"name": "Fact"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Fox_Fact_t",
						"type": "DatasetReference"
					},
					"name": "PopulateFact"
				},
				{
					"dataset": {
						"referenceName": "Fox_Fact_t_update",
						"type": "DatasetReference"
					},
					"name": "PopulateFactUpdate"
				}
			],
			"script": "\n\nsource(output(\n\t\tJobID as integer,\n\t\tProductionID as string,\n\t\tFeatureTitle as string,\n\t\tProjectID as string,\n\t\tJobStatus as string,\n\t\tTerritory as string,\n\t\tSpotName as string,\n\t\tCampaignName as string,\n\t\tClientName as string,\n\t\tEndDate as string,\n\t\tDescription as string,\n\t\tUnitsBilled as string,\n\t\tBillingTotal as string,\n\t\tCurrency as string,\n\t\tVersion as string,\n\t\tAsset as string,\n\t\tFormat as string,\n\t\tDestination as string,\n\t\tLength as string,\n\t\tLanguage as string,\n\t\tCountry as string,\n\t\tInputDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> StagingSource\nsource(output(\n\t\tJobID as integer,\n\t\tProductionID as integer,\n\t\tProjectID as integer,\n\t\tJobStatus as string,\n\t\tTerritory as string,\n\t\tSpotName as string,\n\t\tCampaign as string,\n\t\tEndDate as timestamp,\n\t\tDescription as string,\n\t\tUnitsBilled as decimal(18,0),\n\t\tBillingTotal as decimal(18,0),\n\t\tVersion as integer,\n\t\tAsset as string,\n\t\tFormat as string,\n\t\tDestination as string,\n\t\tLength as string,\n\t\tLanguage as string,\n\t\tCountry as string,\n\t\tInputDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Fact\nJoin split(isNull(FactJobID),\n\tdisjoint: false) ~> ConditionalSplit1@(NoMatchOutput, MatchOutput)\nStagingSource, SelectJobID join(JobID == FactJobID,\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join\nFact select(mapColumn(\n\t\tFactJobID = JobID\n\t)) ~> SelectJobID\nConditionalSplit1@NoMatchOutput derive(ProductionID = toInteger(ProductionID),\n\t\tProjectID = toInteger(ProjectID),\n\t\tUnitsBilled = toDecimal(UnitsBilled),\n\t\tBillingTotal = toDecimal(BillingTotal),\n\t\tVersion = toInteger(Version),\n\t\tEndDate = toTimestamp(EndDate)) ~> TransformDateType\nTransformDateType select(mapColumn(\n\t\tJobID,\n\t\tProductionID,\n\t\tFeatureTitle,\n\t\tProjectID,\n\t\tJobStatus,\n\t\tTerritory,\n\t\tSpotName,\n\t\tCampaign = CampaignName,\n\t\tClientName,\n\t\tEndDate,\n\t\tDescription,\n\t\tUnitsBilled,\n\t\tBillingTotal,\n\t\tCurrency,\n\t\tVersion,\n\t\tAsset,\n\t\tFormat,\n\t\tDestination,\n\t\tLength,\n\t\tLanguage,\n\t\tCountry,\n\t\tFactJobID\n\t)) ~> RemoveInputDate\nRemoveInputDate sink(input(\n\t\tJobID as integer,\n\t\tProductionID as integer,\n\t\tProjectID as integer,\n\t\tJobStatus as string,\n\t\tTerritory as string,\n\t\tSpotName as string,\n\t\tCampaign as string,\n\t\tEndDate as timestamp,\n\t\tDescription as string,\n\t\tUnitsBilled as decimal(18,0),\n\t\tBillingTotal as decimal(18,0),\n\t\tVersion as integer,\n\t\tAsset as string,\n\t\tFormat as string,\n\t\tDestination as string,\n\t\tLength as string,\n\t\tLanguage as string,\n\t\tCountry as string,\n\t\tInputDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tmapColumn(\n\t\tJobID,\n\t\tProductionID,\n\t\tProjectID,\n\t\tJobStatus,\n\t\tTerritory,\n\t\tSpotName,\n\t\tCampaign,\n\t\tEndDate,\n\t\tDescription,\n\t\tUnitsBilled,\n\t\tBillingTotal,\n\t\tVersion,\n\t\tAsset,\n\t\tFormat,\n\t\tDestination,\n\t\tLength,\n\t\tLanguage,\n\t\tCountry\n\t)) ~> PopulateFact\nConditionalSplit1@MatchOutput sink(input(\n\t\tJobID as integer,\n\t\tJobStatus as string,\n\t\tInputDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tmapColumn(\n\t\tJobID,\n\t\tJobStatus\n\t)) ~> PopulateFactUpdate"
		}
	}
}